version: "3"
services: 
  postgres:
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=test123
    container_name: postgres-db
    restart: on-failure
    image: postgres:13.2
    volumes:
      - backend-data:/var/lib/postgresql/data
    expose: 
      - "5432"
  redis:
    container_name: redis
    restart: on-failure
    image: redis
    expose: 
      - "6379"
  # backend:
  #   container_name: backend
  #   restart: always
  #   env_file: .env
  #   volumes:
  #     - .:/affinity
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   command: >
  #     sh -c "python manage.py migrate &&
  #            python manage.py runserver 0.0.0.0:8000"
  #   ports: 
  #     - 8000:8000
  #   depends_on:
  #     - postgres
  #     - redis
  trader:
    container_name: trader
    restart: always
    env_file: .env
    volumes:
      - .:/affinity
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      sh -c "python manage.py start_trade"
    depends_on:
      - postgres
      - redis
  rabbit:
    container_name: rabbitmq
    restart: on-failure
    image: rabbitmq:3.8.16
    env_file: 
      - .env
    ports: 
      - "5672:5672"
  celery:
    container_name: celery-worker
    restart: on-failure
    env_file: .env
    environment: 
      - DB_HOST=postgres
    build: 
      context: .
      dockerfile: ./Dockerfile
    command: "celery -A trading.tasks worker --loglevel=INFO --purge"
    depends_on:
      - redis
      - rabbit
      - backend
      - postgres
  # atom_beat:
  #   container_name: celery-beat
  #   restart: on-failure
  #   build: 
  #     context: .
  #     dockerfile: ./Dockerfile
  #   command: "celery -A atom beat --loglevel=INFO"
    # links: 
    #   - atom_redis
    # depends_on: 
    #   - atom_redis
    #   - atom_rabbit
volumes:
  backend-data:
  # backend-app:
